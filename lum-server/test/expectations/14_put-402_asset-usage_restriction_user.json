{
    "db": [
        {
            "sqlCmd": "BEGIN TRANSACTION ISOLATION LEVEL REPEATABLE READ",
            "result": {
                "command": "BEGIN",
                "rowCount": 1,
                "rows": []
            }
        },
        {
            "sqlCmd": "SELECT TXID_CURRENT() AS txid, PG_BACKEND_PID() AS pid, NOW() AS tx_now",
            "result": {
                "command": "SELECT",
                "rowCount": 1,
                "rows": [
                    {
                        "txid": 123,
                        "pid": 456,
                        "tx_now": "__to_date__|2019-12-19T11:43:20.952Z"
                    }
                ]
            }
        },
        {
            "sqlCmd": "INSERT INTO \"assetUsageReq\" (\"assetUsageReqId\" , \"action\",\"assetUsageType\",\"requestHttp\",\"request\",\"userId\",\"status\", \"requestStarted\") VALUES (($1) , ($2),($3),($4),($5),($6),($7), NOW())",
            "sqlVals": [
                "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                "acumos:deploy",
                "assetUsage",
                {
                    "method": "PUT",
                    "requestUrl": "__type__ignore__",
                    "serverFQDN": "__type__ignore__",
                    "path": "/api/v1/asset-usage",
                    "originalUrl": "/api/v1/asset-usage?assetUsageId=alex-usage-1",
                    "query": {
                        "assetUsageId": "alex-usage-1"
                    },
                    "Content-Type": "application/json; charset=utf-8",
                    "userAgent": "__type__ignore__",
                    "clientIPAddress": "__type__ignore__",
                    "ips": []
                },
                {
                    "userId": "alex-usage",
                    "swMgtSystemId": "alex-sys",
                    "swMgtSystemInstanceId": "123",
                    "swMgtSystemComponent": "dev",
                    "assetUsageReq": {
                        "swTagId": "alex-1",
                        "assetUsageId": "alex-usage-1",
                        "action": "acumos:deploy",
                        "isIncludedAsset": false,
                        "includedAssetUsage": [
                            {
                                "includedSwTagId": "alex-1",
                                "includedAssetUsageId": "alex-usage-2"
                            }
                        ]
                    }
                },
                "alex-usage",
                "started"
            ],
            "result": {
                "command": "INSERT",
                "rowCount": 1,
                "rows": []
            }
        },
        {
            "sqlCmd": "WITH sw_lp AS ( SELECT swt.*, COALESCE(($4) = ANY (swt.\"swCreators\"), FALSE) AS \"isUsedBySwCreator\", lp.\"licenseProfileRevision\", lp.\"licenseProfileActive\", lp.\"closureReason\" AS lp_closure_reason, lp.\"isRtuRequired\", COALESCE(swt.\"swidTagActive\" = TRUE AND lp.\"licenseProfileActive\" = TRUE AND lp.\"isRtuRequired\" = TRUE AND COALESCE(($4) = ANY (swt.\"swCreators\"), FALSE) = FALSE, FALSE) AS need_rtu FROM \"swidTag\" AS swt LEFT OUTER JOIN LATERAL (SELECT l_p.* FROM \"licenseProfile\" AS l_p WHERE l_p.\"licenseProfileId\" = swt.\"licenseProfileId\" FOR SHARE) AS lp ON TRUE WHERE swt.\"swTagId\" = ($1) FOR SHARE OF swt ) , swid_tag AS ( SELECT sw_lp.*, CASE WHEN sw_lp.\"isUsedBySwCreator\" = TRUE  THEN 'bySwCreator' WHEN sw_lp.\"isRtuRequired\"     = FALSE THEN 'freeToUse' WHEN sw_lp.need_rtu            = TRUE  THEN 'rightToUse' ELSE NULL END AS \"usageType\", CASE WHEN sw_lp.\"swidTagActive\" = FALSE THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swidTagRevoked', 'denialType', 'swidTagRevoked', 'denialReason', FORMAT('swid-tag(%s) %s', sw_lp.\"swTagId\", COALESCE(sw_lp.\"closureReason\", 'revoked')), 'deniedAction', ($2)::TEXT ) WHEN sw_lp.\"licenseProfileRevision\" IS NULL THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_licenseProfileNotFound', 'denialType', 'licenseProfileNotFound', 'denialReason', FORMAT('license-profile(%s) not found for swid-tag(%s)', sw_lp.\"licenseProfileId\", sw_lp.\"swTagId\"), 'deniedAction', ($2)::TEXT ) WHEN sw_lp.\"licenseProfileActive\" = FALSE THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_licenseProfileRevoked', 'denialType', 'licenseProfileRevoked', 'denialReason', FORMAT('license-profile(%s) %s for swid-tag(%s)', sw_lp.\"licenseProfileId\", COALESCE(sw_lp.lp_closure_reason, 'revoked'), sw_lp.\"swTagId\"), 'deniedAction', ($2)::TEXT ) ELSE NULL END AS \"denial\" FROM sw_lp ) , swt_ctlg AS ( SELECT stag.\"swTagId\", ARRAY_AGG(DISTINCT ctlg.\"swCatalogId\")   AS \"swCatalogIds\", ARRAY_AGG(DISTINCT ctlg.\"swCatalogType\") AS \"swCatalogTypes\" FROM (SELECT \"swTagId\", \"swCatalogs\" FROM swid_tag WHERE swid_tag.need_rtu = TRUE) AS stag CROSS JOIN LATERAL JSONB_TO_RECORDSET(stag.\"swCatalogs\") AS ctlg(\"swCatalogId\" TEXT, \"swCatalogType\" TEXT) GROUP BY stag.\"swTagId\") , rtu_rule AS ( SELECT  swid_tag.\"swTagId\" AS rtu_sw_id, rtu.\"assetUsageRuleId\", rtu.\"assetUsageAgreementId\", agr.\"assetUsageAgreementRevision\", rtu.\"rightToUseId\", rtu.\"assetUsageRuleType\", rtu.\"rightToUseRevision\", rtu.\"metricsRevision\", rtu.\"licenseKeys\", \"rtuAction\", usmcs.\"metrics\", rtu.\"assigneeMetrics\", (rtu.\"assigneeMetrics\"->'users')::JSONB ? ($4) AS \"isUserInAssigneeMetrics\" FROM swid_tag JOIN \"rightToUse\" AS rtu ON (rtu.\"softwareLicensorId\" = swid_tag.\"softwareLicensorId\") JOIN \"assetUsageAgreement\" AS agr ON (rtu.\"softwareLicensorId\" = agr.\"softwareLicensorId\" AND rtu.\"assetUsageAgreementId\" = agr.\"assetUsageAgreementId\") CROSS JOIN LATERAL JSON_ARRAY_ELEMENTS_TEXT(ARRAY_TO_JSON(rtu.\"actions\")) AS \"rtuAction\" LEFT OUTER JOIN LATERAL (SELECT ums.* FROM \"usageMetrics\" AS ums WHERE ums.\"usageMetricsId\" = rtu.\"assetUsageRuleId\" AND ums.\"action\" = \"rtuAction\" AND ums.\"usageType\" = 'rightToUse' FOR UPDATE) AS usmcs ON TRUE LEFT OUTER JOIN LATERAL (SELECT swt_ctlg.\"swCatalogIds\", swt_ctlg.\"swCatalogTypes\" FROM swt_ctlg WHERE swt_ctlg.\"swTagId\" = swid_tag.\"swTagId\") AS ctlgs ON TRUE WHERE \"rtuAction\" IN (($2),($3)) AND rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND (rtu.\"targetRefinement\"#>'{lum:swPersistentId}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swPersistentId,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::JSONB ? (swid_tag.\"swPersistentId\")::TEXT WHEN 'lt' THEN (swid_tag.\"swPersistentId\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swPersistentId\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swPersistentId\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swPersistentId\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swPersistentId\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT ELSE FALSE END, FALSE)) AND (rtu.\"targetRefinement\"#>'{lum:swTagId}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swTagId,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::JSONB ? (swid_tag.\"swTagId\")::TEXT WHEN 'lt' THEN (swid_tag.\"swTagId\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swTagId\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swTagId\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swTagId\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swTagId\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT ELSE FALSE END, FALSE)) AND (rtu.\"targetRefinement\"#>'{lum:swProductName}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swProductName,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::JSONB ? (swid_tag.\"swProductName\")::TEXT WHEN 'lt' THEN (swid_tag.\"swProductName\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swProductName\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swProductName\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swProductName\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swProductName\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT ELSE FALSE END, FALSE)) AND (rtu.\"targetRefinement\"#>'{lum:swCategory}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swCategory,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::JSONB ? (swid_tag.\"swCategory\")::TEXT WHEN 'lt' THEN (swid_tag.\"swCategory\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swCategory\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swCategory\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swCategory\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swCategory\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT ELSE FALSE END, FALSE)) AND (rtu.\"targetRefinement\"#>'{lum:swCatalogId}' IS NULL OR COALESCE(rtu.\"targetRefinement\"#>'{lum:swCatalogId,rightOperand}' ?| ctlgs.\"swCatalogIds\", FALSE)) AND (rtu.\"targetRefinement\"#>'{lum:swCatalogType}' IS NULL OR COALESCE(rtu.\"targetRefinement\"#>'{lum:swCatalogType,rightOperand}' ?| ctlgs.\"swCatalogTypes\", FALSE)) AND (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers}' IS NULL OR (rtu.\"assigneeMetrics\"->'users')::JSONB ? ($4) OR COALESCE(CASE rtu.\"assigneeRefinement\"#>>'{lum:countUniqueUsers,operator}' WHEN 'lum:in' THEN (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::JSONB ? (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::TEXT WHEN 'lt' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER < (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'lteq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER <= (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'eq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER = (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'gteq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER >= (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'gt' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER > (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER ELSE FALSE END, FALSE)) AND ((rtu.\"assigneeRefinement\"#>'{lum:users}') IS NULL OR COALESCE(CASE rtu.\"assigneeRefinement\"#>>'{lum:users,operator}' WHEN 'lum:in' THEN (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::JSONB ? (($4))::TEXT WHEN 'lt' THEN (($4))::TEXT < (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'lteq' THEN (($4))::TEXT <= (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'eq' THEN (($4))::TEXT = (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'gteq' THEN (($4))::TEXT >= (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'gt' THEN (($4))::TEXT > (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT ELSE FALSE END, FALSE)) AND (rtu.\"usageConstraints\"#>'{count}' IS NULL OR COALESCE(CASE rtu.\"usageConstraints\"#>>'{count,operator}' WHEN 'lum:in' THEN (rtu.\"usageConstraints\"#>'{count,rightOperand}')::JSONB ? (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::TEXT WHEN 'lt' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER < (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'lteq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER <= (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'eq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER = (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'gteq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER >= (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'gt' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER > (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER ELSE FALSE END, FALSE)) ORDER BY swid_tag.\"swTagId\", NULLIF(rtu.\"assetUsageRuleType\", 'prohibition') NULLS FIRST, NULLIF(\"rtuAction\", 'use') NULLS LAST, rtu.\"created\", rtu.\"assetUsageRuleId\" LIMIT 1 FOR UPDATE OF rtu) , swid_tag_entitlement AS ( SELECT swid_tag.\"softwareLicensorId\", swid_tag.\"swTagId\", swid_tag.\"swidTagRevision\", swid_tag.\"swPersistentId\", swid_tag.\"swVersion\", swid_tag.\"swProductName\", swid_tag.\"licenseProfileId\", swid_tag.\"licenseProfileRevision\", swid_tag.\"isUsedBySwCreator\", swid_tag.\"isRtuRequired\", swid_tag.\"usageType\", swid_tag.need_rtu, CASE WHEN swid_tag.\"denial\" IS NOT NULL THEN swid_tag.\"denial\" WHEN swid_tag.need_rtu = FALSE THEN NULL WHEN rtu_rule.\"assetUsageRuleType\" = 'prohibition' THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_usageProhibited', 'denialType', 'usageProhibited', 'denialReason', FORMAT('swid-tag(%s) has been found but asset-usage is prohibited by prohibition(%s) under asset-usage-agreement(%s) for action(%s)', swid_tag.\"swTagId\", rtu_rule.\"rightToUseId\", rtu_rule.\"assetUsageAgreementId\", rtu_rule.\"rtuAction\"), 'deniedAction', rtu_rule.\"rtuAction\", 'deniedAssetUsageAgreementId', rtu_rule.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', rtu_rule.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu_rule.\"rightToUseId\", 'deniedRightToUseRevision', rtu_rule.\"rightToUseRevision\", 'denialReqItemName', 'action', 'denialReqItemValue', ($2)::TEXT, 'deniedConstraint', JSON_BUILD_OBJECT('action', rtu_rule.\"rtuAction\") ) ELSE NULL END AS \"denial\", rtu_rule.* FROM swid_tag LEFT OUTER JOIN rtu_rule ON (swid_tag.\"swTagId\" = rtu_rule.rtu_sw_id) ) SELECT \"softwareLicensorId\", \"swTagId\", \"swidTagRevision\", \"swPersistentId\", \"swVersion\", \"swProductName\", \"licenseProfileId\", \"licenseProfileRevision\", \"isUsedBySwCreator\", \"isRtuRequired\", \"assetUsageRuleId\", \"assetUsageAgreementId\", \"assetUsageAgreementRevision\", \"rightToUseId\", \"assetUsageRuleType\", \"rightToUseRevision\", \"metricsRevision\", \"licenseKeys\", \"rtuAction\", \"metrics\", \"assigneeMetrics\", \"isUserInAssigneeMetrics\", \"denial\", CASE WHEN \"denial\" IS NULL AND swtags_ent.need_rtu = TRUE AND swtags_ent.rtu_sw_id IS NOT NULL THEN JSON_BUILD_OBJECT( 'rightToUseId', swtags_ent.\"rightToUseId\", 'rightToUseRevision', swtags_ent.\"rightToUseRevision\", 'assetUsageAgreementId', swtags_ent.\"assetUsageAgreementId\", 'assetUsageAgreementRevision', swtags_ent.\"assetUsageAgreementRevision\", 'licenseKeys', swtags_ent.\"licenseKeys\" ) ELSE NULL END AS \"entitlement\" FROM swid_tag_entitlement AS swtags_ent",
            "sqlVals": [
                "alex-1",
                "acumos:deploy",
                "use",
                "alex-usage",
                2
            ],
            "result": {
                "command": "SELECT",
                "rowCount": 1,
                "rows": [
                    {
                        "softwareLicensorId": "swlic",
                        "swTagId": "alex-1",
                        "swidTagRevision": 1,
                        "swPersistentId": "fab0954c-d4e5-443a-8d3e-cf7620e80455",
                        "swVersion": "1",
                        "swProductName": "alex-product2",
                        "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                        "licenseProfileRevision": 1,
                        "isUsedBySwCreator": false,
                        "isRtuRequired": true,
                        "assetUsageRuleId": null,
                        "assetUsageAgreementId": null,
                        "assetUsageAgreementRevision": null,
                        "rightToUseId": null,
                        "assetUsageRuleType": null,
                        "rightToUseRevision": null,
                        "metricsRevision": null,
                        "licenseKeys": null,
                        "rtuAction": null,
                        "metrics": null,
                        "assigneeMetrics": null,
                        "isUserInAssigneeMetrics": null,
                        "denial": null,
                        "entitlement": null
                    }
                ]
            }
        },
        {
            "sqlCmd": "WITH swt_ctlg AS ( SELECT stag.\"swTagId\", ARRAY_AGG(DISTINCT ctlg.\"swCatalogId\") AS \"swCatalogIds\", ARRAY_AGG(DISTINCT ctlg.\"swCatalogType\") AS \"swCatalogTypes\" FROM (SELECT \"swTagId\", \"swCatalogs\" FROM \"swidTag\" WHERE \"swTagId\" = ($1)) AS stag CROSS JOIN LATERAL JSONB_TO_RECORDSET(stag.\"swCatalogs\") AS ctlg(\"swCatalogId\" TEXT, \"swCatalogType\" TEXT) GROUP BY stag.\"swTagId\") SELECT CASE WHEN NOT rtu.\"rightToUseActive\" THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_rightToUseRevoked', 'denialType', 'rightToUseRevoked', 'denialReason', FORMAT( 'rightToUse %s on %s(%s) under agreement(%s) for action(%s)', COALESCE(rtu.\"closureReason\", 'revoked'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'rightToUseActive', 'denialReqItemValue', TRUE ) ELSE NULL END AS \"denied_due_rightToUseRevoked\", CASE WHEN rtu.\"rightToUseActive\" AND NOT COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_expireOn', 'denialType', 'timingConstraint', 'denialReason', FORMAT( 'rightToUse expired: (today(%s) > expireOn(%s)) on %s(%s) under agreement(%s) for action(%s)', NOW()::DATE, rtu.\"expireOn\", rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'date', 'denialReqItemValue', NOW()::DATE, 'deniedConstraint', JSON_BUILD_OBJECT('expireOn', rtu.\"expireOn\") ) ELSE NULL END AS \"denied_due_expireOn\", CASE WHEN rtu.\"rightToUseActive\" AND NOT COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_goodFor', 'denialType', 'timingConstraint', 'denialReason', FORMAT( 'rightToUse too late: (now(%s) > end-of-good-for(%s)), usage started(%s), was good for(%s) on %s(%s) under agreement(%s) for action(%s)', TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'), TO_CHAR(rtu.\"usageEnds\" AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'), TO_CHAR(rtu.\"usageStarted\" AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'), TRIM(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE( TO_CHAR(rtu.\"goodFor\", ' YYYY \"years\" MM \"months\" DD \"days\" HH24 \"hours\" MI \"minutes\" SS.MS \"seconds\"'), ' 0+([1-9]\\d*[.]?\\d*|0[.]\\d*) ', ' \\1 ', 'g'), '\\m0+[.]?0* [a-z]+s\\M', '', 'g'), '[.]-', '.', 'g'), '\\m1 ([a-z]+)s\\M', '1 \\1', 'g'), '  ', ' ', 'g')), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'datetime', 'denialReqItemValue', TO_CHAR(NOW() AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'), 'deniedConstraint', JSON_BUILD_OBJECT( 'goodFor', REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE(REGEXP_REPLACE( TO_CHAR(rtu.\"goodFor\", '\"P\" YYYY \"Y\" MM \"M\" DD \"D\" \"T\" HH24 \"H\" MI \"M\" SS.MS \"S\"'), ' 0+([1-9]\\d*[.]?\\d*|0[.]\\d*) ', ' \\1 ', 'g'), '\\m0+[.]?0* [A-Z]\\M', '', 'g'), '[.]-', '.', 'g'), '(\\s+|T\\s+$)', '', 'g'), 'usageStarted', TO_CHAR(rtu.\"usageStarted\" AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"'), 'usageEnded', TO_CHAR(rtu.\"usageEnds\" AT TIME ZONE 'UTC', 'YYYY-MM-DD\"T\"HH24:MI:SS.MS\"Z\"') ) ) ELSE NULL END AS \"denied_due_goodFor\", CASE WHEN rtu.\"rightToUseActive\" AND NOT COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_enableOn', 'denialType', 'timingConstraint', 'denialReason', FORMAT( 'rightToUse not enabled yet: (today(%s) < enableOn(%s)) on %s(%s) under agreement(%s) for action(%s)', NOW()::DATE, rtu.\"enableOn\", rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'date', 'denialReqItemValue', NOW()::DATE, 'deniedConstraint', JSON_BUILD_OBJECT('enableOn', rtu.\"enableOn\") ) ELSE NULL END AS \"denied_due_enableOn\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swPersistentId}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swPersistentId,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::JSONB ? (swid_tag.\"swPersistentId\")::TEXT WHEN 'lt' THEN (swid_tag.\"swPersistentId\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swPersistentId\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swPersistentId\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swPersistentId\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swPersistentId\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swPersistentId,rightOperand}')::TEXT ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swPersistentIdOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swPersistentId,leftOperand}'), swid_tag.\"swPersistentId\", (rtu.\"targetRefinement\"#>>'{lum:swPersistentId,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swPersistentId,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swPersistentId', 'denialReqItemValue', swid_tag.\"swPersistentId\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swPersistentId}' ) ELSE NULL END AS \"denied_due_swPersistentIdOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swTagId}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swTagId,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::JSONB ? (swid_tag.\"swTagId\")::TEXT WHEN 'lt' THEN (swid_tag.\"swTagId\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swTagId\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swTagId\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swTagId\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swTagId\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swTagId,rightOperand}')::TEXT ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swTagIdOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swTagId,leftOperand}'), swid_tag.\"swTagId\", (rtu.\"targetRefinement\"#>>'{lum:swTagId,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swTagId,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swTagId', 'denialReqItemValue', swid_tag.\"swTagId\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swTagId}' ) ELSE NULL END AS \"denied_due_swTagIdOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swProductName}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swProductName,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::JSONB ? (swid_tag.\"swProductName\")::TEXT WHEN 'lt' THEN (swid_tag.\"swProductName\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swProductName\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swProductName\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swProductName\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swProductName\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swProductName,rightOperand}')::TEXT ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swProductNameOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swProductName,leftOperand}'), swid_tag.\"swProductName\", (rtu.\"targetRefinement\"#>>'{lum:swProductName,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swProductName,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swProductName', 'denialReqItemValue', swid_tag.\"swProductName\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swProductName}' ) ELSE NULL END AS \"denied_due_swProductNameOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swCategory}' IS NULL OR COALESCE(CASE rtu.\"targetRefinement\"#>>'{lum:swCategory,operator}' WHEN 'lum:in' THEN (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::JSONB ? (swid_tag.\"swCategory\")::TEXT WHEN 'lt' THEN (swid_tag.\"swCategory\")::TEXT < (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'lteq' THEN (swid_tag.\"swCategory\")::TEXT <= (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'eq' THEN (swid_tag.\"swCategory\")::TEXT = (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'gteq' THEN (swid_tag.\"swCategory\")::TEXT >= (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT WHEN 'gt' THEN (swid_tag.\"swCategory\")::TEXT > (rtu.\"targetRefinement\"#>'{lum:swCategory,rightOperand}')::TEXT ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swCategoryOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swCategory,leftOperand}'), swid_tag.\"swCategory\", (rtu.\"targetRefinement\"#>>'{lum:swCategory,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swCategory,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swCategory', 'denialReqItemValue', swid_tag.\"swCategory\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swCategory}' ) ELSE NULL END AS \"denied_due_swCategoryOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swCatalogId}' IS NULL OR COALESCE(rtu.\"targetRefinement\"#>'{lum:swCatalogId,rightOperand}' ?| ctlgs.\"swCatalogIds\", FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swCatalogIdOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (none of %s %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swCatalogId,leftOperand}'), ARRAY_TO_JSON(ctlgs.\"swCatalogIds\")::TEXT, (rtu.\"targetRefinement\"#>>'{lum:swCatalogId,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swCatalogId,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swCatalogId', 'denialReqItemValue', ctlgs.\"swCatalogIds\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swCatalogId}' ) ELSE NULL END AS \"denied_due_swCatalogIdOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"targetRefinement\"#>'{lum:swCatalogType}' IS NULL OR COALESCE(rtu.\"targetRefinement\"#>'{lum:swCatalogType,rightOperand}' ?| ctlgs.\"swCatalogTypes\", FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_swCatalogTypeOnTarget', 'denialType', 'matchingConstraintOnTarget', 'denialReason', FORMAT( 'not targeted by %s: (none of %s %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"targetRefinement\"#>>'{lum:swCatalogType,leftOperand}'), ARRAY_TO_JSON(ctlgs.\"swCatalogTypes\")::TEXT, (rtu.\"targetRefinement\"#>>'{lum:swCatalogType,operator}'), (rtu.\"targetRefinement\"#>>'{lum:swCatalogType,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'swCatalogType', 'denialReqItemValue', ctlgs.\"swCatalogTypes\", 'deniedConstraint', rtu.\"targetRefinement\"#>'{lum:swCatalogType}' ) ELSE NULL END AS \"denied_due_swCatalogTypeOnTarget\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers}' IS NULL OR (rtu.\"assigneeMetrics\"->'users')::JSONB ? ($4) OR COALESCE(CASE rtu.\"assigneeRefinement\"#>>'{lum:countUniqueUsers,operator}' WHEN 'lum:in' THEN (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::JSONB ? (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::TEXT WHEN 'lt' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER < (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'lteq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER <= (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'eq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER = (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'gteq' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER >= (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER WHEN 'gt' THEN (COALESCE(JSONB_ARRAY_LENGTH((rtu.\"assigneeMetrics\"->'users')::JSONB), 0) + 1)::INTEGER > (rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers,rightOperand}')::INTEGER ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_countUniqueUsersOnAssignee', 'denialType', 'matchingConstraintOnAssignee', 'denialReason', FORMAT( 'too many users: (%s not in %s) on %s(%s) under agreement(%s) for action(%s)', ($4), rtu.\"assigneeMetrics\"::TEXT, rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'userId', 'denialReqItemValue', ($4), 'deniedConstraint', rtu.\"assigneeRefinement\"#>'{lum:countUniqueUsers}', 'deniedMetrics', rtu.\"assigneeMetrics\" ) ELSE NULL END AS \"denied_due_countUniqueUsersOnAssignee\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT ((rtu.\"assigneeRefinement\"#>'{lum:users}') IS NULL OR COALESCE(CASE rtu.\"assigneeRefinement\"#>>'{lum:users,operator}' WHEN 'lum:in' THEN (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::JSONB ? (($4))::TEXT WHEN 'lt' THEN (($4))::TEXT < (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'lteq' THEN (($4))::TEXT <= (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'eq' THEN (($4))::TEXT = (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'gteq' THEN (($4))::TEXT >= (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT WHEN 'gt' THEN (($4))::TEXT > (rtu.\"assigneeRefinement\"#>'{lum:users,rightOperand}')::TEXT ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_usersOnAssignee', 'denialType', 'matchingConstraintOnAssignee', 'denialReason', FORMAT( 'user not in assignee %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"assigneeRefinement\"#>>'{lum:users,leftOperand}'), ($4), (rtu.\"assigneeRefinement\"#>>'{lum:users,operator}'), (rtu.\"assigneeRefinement\"#>>'{lum:users,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'userId', 'denialReqItemValue', ($4), 'deniedConstraint', rtu.\"assigneeRefinement\"#>'{lum:users}' ) ELSE NULL END AS \"denied_due_usersOnAssignee\", CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) AND NOT (rtu.\"usageConstraints\"#>'{count}' IS NULL OR COALESCE(CASE rtu.\"usageConstraints\"#>>'{count,operator}' WHEN 'lum:in' THEN (rtu.\"usageConstraints\"#>'{count,rightOperand}')::JSONB ? (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::TEXT WHEN 'lt' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER < (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'lteq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER <= (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'eq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER = (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'gteq' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER >= (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER WHEN 'gt' THEN (COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5))::INTEGER > (rtu.\"usageConstraints\"#>'{count,rightOperand}')::INTEGER ELSE FALSE END, FALSE)) THEN JSON_BUILD_OBJECT( 'denialCode', 'denied_due_usageCount', 'denialType', 'usageConstraint', 'denialReason', FORMAT( 'exceeding the usage %s: (%s not %s %s) on %s(%s) under agreement(%s) for action(%s)', (rtu.\"usageConstraints\"#>>'{count,leftOperand}'), COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) + ($5), (rtu.\"usageConstraints\"#>>'{count,operator}'), (rtu.\"usageConstraints\"#>>'{count,rightOperand}'), rtu.\"assetUsageRuleType\", rtu.\"rightToUseId\", rtu.\"assetUsageAgreementId\", \"rtuAction\"), 'deniedAction', \"rtuAction\", 'deniedAssetUsageAgreementId', rtu.\"assetUsageAgreementId\", 'deniedAssetUsageAgreementRevision', agr.\"assetUsageAgreementRevision\", 'deniedRightToUseId', rtu.\"rightToUseId\", 'deniedRightToUseRevision', rtu.\"rightToUseRevision\", 'denialReqItemName', 'usageCount', 'denialReqItemValue', ($5), 'deniedConstraint', rtu.\"usageConstraints\"#>'{count}', 'deniedMetrics', COALESCE((usmcs.\"metrics\"#>'{count}')::INTEGER, 0) ) ELSE NULL END AS \"denied_due_usageCount\" FROM (SELECT * FROM \"swidTag\" WHERE \"swTagId\" = ($1)) AS swid_tag JOIN \"rightToUse\" AS rtu ON (rtu.\"softwareLicensorId\" = swid_tag.\"softwareLicensorId\") JOIN \"assetUsageAgreement\" AS agr ON (rtu.\"softwareLicensorId\" = agr.\"softwareLicensorId\" AND rtu.\"assetUsageAgreementId\" = agr.\"assetUsageAgreementId\") CROSS JOIN LATERAL JSON_ARRAY_ELEMENTS_TEXT(ARRAY_TO_JSON(rtu.\"actions\")) AS \"rtuAction\" LEFT OUTER JOIN LATERAL (SELECT ums.* FROM \"usageMetrics\" AS ums WHERE ums.\"usageMetricsId\" = rtu.\"assetUsageRuleId\" AND ums.\"action\" = \"rtuAction\" AND ums.\"usageType\" = 'rightToUse') AS usmcs ON TRUE LEFT OUTER JOIN LATERAL (SELECT swt_ctlg.\"swCatalogIds\", swt_ctlg.\"swCatalogTypes\" FROM swt_ctlg WHERE swt_ctlg.\"swTagId\" = swid_tag.\"swTagId\") AS ctlgs ON TRUE WHERE \"rtuAction\" IN (($2),($3)) AND rtu.\"assetUsageRuleType\" != 'prohibition' ORDER BY CASE WHEN rtu.\"rightToUseActive\" = TRUE AND COALESCE(NOW()::DATE >= rtu.\"enableOn\", TRUE) AND COALESCE(NOW()::DATE <= rtu.\"expireOn\", TRUE) AND COALESCE(NOW() <= rtu.\"usageEnds\", TRUE) THEN '0' ELSE '1' END, NULLIF(\"rtuAction\", 'use') NULLS LAST, rtu.\"created\", rtu.\"assetUsageRuleId\" LIMIT 100",
            "sqlVals": [
                "alex-1",
                "acumos:deploy",
                "use",
                "alex-usage",
                2
            ],
            "result": {
                "command": "SELECT",
                "rowCount": 3,
                "rows": [
                    {
                        "denied_due_rightToUseRevoked": null,
                        "denied_due_expireOn": null,
                        "denied_due_goodFor": null,
                        "denied_due_enableOn": null,
                        "denied_due_swPersistentIdOnTarget": null,
                        "denied_due_swTagIdOnTarget": null,
                        "denied_due_swProductNameOnTarget": null,
                        "denied_due_swCategoryOnTarget": null,
                        "denied_due_swCatalogIdOnTarget": null,
                        "denied_due_swCatalogTypeOnTarget": null,
                        "denied_due_countUniqueUsersOnAssignee": null,
                        "denied_due_usersOnAssignee": {
                            "denialCode": "denied_due_usersOnAssignee",
                            "denialType": "matchingConstraintOnAssignee",
                            "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr",
                            "deniedAssetUsageAgreementRevision": 49,
                            "deniedRightToUseId": "perm-1",
                            "deniedRightToUseRevision": 49,
                            "denialReqItemName": "userId",
                            "denialReqItemValue": "alex-usage",
                            "deniedConstraint": {
                                "origin": "fromRestriction",
                                "dataType": "string",
                                "operator": "lum:in",
                                "leftOperand": "lum:users",
                                "rightOperand": [
                                    "alex",
                                    "justin",
                                    "michelle",
                                    "unit-tester"
                                ]
                            }
                        },
                        "denied_due_usageCount": null
                    },
                    {
                        "denied_due_rightToUseRevoked": {
                            "denialCode": "denied_due_rightToUseRevoked",
                            "denialType": "rightToUseRevoked",
                            "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr2",
                            "deniedAssetUsageAgreementRevision": 4,
                            "deniedRightToUseId": "perm-1",
                            "deniedRightToUseRevision": 2,
                            "denialReqItemName": "rightToUseActive",
                            "denialReqItemValue": true
                        },
                        "denied_due_expireOn": null,
                        "denied_due_goodFor": null,
                        "denied_due_enableOn": null,
                        "denied_due_swPersistentIdOnTarget": null,
                        "denied_due_swTagIdOnTarget": null,
                        "denied_due_swProductNameOnTarget": null,
                        "denied_due_swCategoryOnTarget": null,
                        "denied_due_swCatalogIdOnTarget": null,
                        "denied_due_swCatalogTypeOnTarget": null,
                        "denied_due_countUniqueUsersOnAssignee": null,
                        "denied_due_usersOnAssignee": null,
                        "denied_due_usageCount": null
                    },
                    {
                        "denied_due_rightToUseRevoked": {
                            "denialCode": "denied_due_rightToUseRevoked",
                            "denialType": "rightToUseRevoked",
                            "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr2",
                            "deniedAssetUsageAgreementRevision": 4,
                            "deniedRightToUseId": "perm-21",
                            "deniedRightToUseRevision": 4,
                            "denialReqItemName": "rightToUseActive",
                            "denialReqItemValue": true
                        },
                        "denied_due_expireOn": null,
                        "denied_due_goodFor": null,
                        "denied_due_enableOn": null,
                        "denied_due_swPersistentIdOnTarget": null,
                        "denied_due_swTagIdOnTarget": null,
                        "denied_due_swProductNameOnTarget": null,
                        "denied_due_swCategoryOnTarget": null,
                        "denied_due_swCatalogIdOnTarget": null,
                        "denied_due_swCatalogTypeOnTarget": null,
                        "denied_due_countUniqueUsersOnAssignee": null,
                        "denied_due_usersOnAssignee": null,
                        "denied_due_usageCount": null
                    }
                ]
            }
        },
        {
            "sqlCmd": "WITH asset_usage AS ( INSERT INTO \"assetUsage\" AS au (\"assetUsageId\" , \"isIncludedAsset\",\"modifier\" , \"creator\", \"assetUsageSeqTail\", \"assetUsageSeqTailEntitlement\", \"created\", \"modified\") VALUES (($1) , ($2),($3) , ($4), 1, 1, NOW(), NOW()) ON CONFLICT (\"assetUsageId\") DO UPDATE SET \"assetUsageSeqTail\" = au.\"assetUsageSeqTail\" + 1, \"assetUsageSeqTailEntitlement\" = au.\"assetUsageSeqTail\" + 1, \"modified\" = NOW() , \"isIncludedAsset\" = ($2),\"modifier\" = ($3) RETURNING \"assetUsageSeqTail\") INSERT INTO \"assetUsageHistory\" AS auh (\"assetUsageId\" , \"swMgtSystemId\",\"swMgtSystemInstanceId\",\"swMgtSystemComponent\",\"usageEntitled\",\"assetUsageReqId\",\"assetUsageType\",\"action\",\"swTagId\",\"softwareLicensorId\",\"swidTagRevision\",\"licenseProfileId\",\"licenseProfileRevision\",\"isRtuRequired\",\"isUsedBySwCreator\",\"assetUsageRuleId\",\"rightToUseRevision\",\"assetUsageAgreementId\",\"assetUsageAgreementRevision\",\"licenseKeys\",\"metrics\",\"assigneeMetrics\",\"usageMetricsId\",\"assetUsageDenialSummary\",\"assetUsageDenial\" , \"creator\", \"assetUsageSeq\", \"created\") SELECT ($1) , ($5),($6),($7),($8),($9),($10),($11),($12),($13),($14),($15),($16),($17),($18),($19),($20),($21),($22),($23),($24),($25),($26),($27),($28) , ($4), \"assetUsageSeqTail\", NOW() FROM asset_usage RETURNING auh.\"assetUsageSeq\"",
            "sqlVals": [
                "alex-usage-1",
                false,
                "alex-usage",
                "alex-usage",
                "alex-sys",
                "123",
                "dev",
                false,
                "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                "assetUsage",
                "acumos:deploy",
                "alex-1",
                "swlic",
                1,
                "d817cbd1-d799-44af-8a5e-693163812e98",
                1,
                true,
                false,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                "[{\"denialCode\":\"denied_due_usersOnAssignee\",\"denialType\":\"matchingConstraintOnAssignee\",\"denialReason\":\"user not in assignee lum:users: (alex-usage not lum:in [\\\"alex\\\", \\\"justin\\\", \\\"michelle\\\", \\\"unit-tester\\\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr\",\"deniedAssetUsageAgreementRevision\":49,\"deniedRightToUseId\":\"perm-1\",\"deniedRightToUseRevision\":49,\"denialReqItemName\":\"userId\",\"denialReqItemValue\":\"alex-usage\",\"deniedConstraint\":{\"origin\":\"fromRestriction\",\"dataType\":\"string\",\"operator\":\"lum:in\",\"leftOperand\":\"lum:users\",\"rightOperand\":[\"alex\",\"justin\",\"michelle\",\"unit-tester\"]}},{\"denialCode\":\"denied_due_rightToUseRevoked\",\"denialType\":\"rightToUseRevoked\",\"denialReason\":\"rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr2\",\"deniedAssetUsageAgreementRevision\":4,\"deniedRightToUseId\":\"perm-1\",\"deniedRightToUseRevision\":2,\"denialReqItemName\":\"rightToUseActive\",\"denialReqItemValue\":true},{\"denialCode\":\"denied_due_rightToUseRevoked\",\"denialType\":\"rightToUseRevoked\",\"denialReason\":\"rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr2\",\"deniedAssetUsageAgreementRevision\":4,\"deniedRightToUseId\":\"perm-21\",\"deniedRightToUseRevision\":4,\"denialReqItemName\":\"rightToUseActive\",\"denialReqItemValue\":true}]"
            ],
            "result": {
                "command": "INSERT",
                "rowCount": 1,
                "rows": [
                    {
                        "assetUsageSeq": 79
                    }
                ]
            }
        },
        {
            "sqlCmd": "WITH asset_usage AS ( INSERT INTO \"assetUsage\" AS au (\"assetUsageId\" , \"isIncludedAsset\",\"modifier\" , \"creator\", \"assetUsageSeqTail\", \"assetUsageSeqTailEntitlement\", \"created\", \"modified\") VALUES (($1) , ($2),($3) , ($4), 1, 1, NOW(), NOW()) ON CONFLICT (\"assetUsageId\") DO UPDATE SET \"assetUsageSeqTail\" = au.\"assetUsageSeqTail\" + 1, \"assetUsageSeqTailEntitlement\" = au.\"assetUsageSeqTail\" + 1, \"modified\" = NOW() , \"isIncludedAsset\" = ($2),\"modifier\" = ($3) RETURNING \"assetUsageSeqTail\") INSERT INTO \"assetUsageHistory\" AS auh (\"assetUsageId\" , \"swMgtSystemId\",\"swMgtSystemInstanceId\",\"swMgtSystemComponent\",\"usageEntitled\",\"assetUsageReqId\",\"assetUsageType\",\"action\",\"swTagId\",\"softwareLicensorId\",\"swidTagRevision\",\"licenseProfileId\",\"licenseProfileRevision\",\"isRtuRequired\",\"isUsedBySwCreator\",\"assetUsageRuleId\",\"rightToUseRevision\",\"assetUsageAgreementId\",\"assetUsageAgreementRevision\",\"licenseKeys\",\"metrics\",\"assigneeMetrics\",\"usageMetricsId\",\"assetUsageDenialSummary\",\"assetUsageDenial\" , \"creator\", \"assetUsageSeq\", \"created\") SELECT ($1) , ($5),($6),($7),($8),($9),($10),($11),($12),($13),($14),($15),($16),($17),($18),($19),($20),($21),($22),($23),($24),($25),($26),($27),($28) , ($4), \"assetUsageSeqTail\", NOW() FROM asset_usage RETURNING auh.\"assetUsageSeq\"",
            "sqlVals": [
                "alex-usage-2",
                true,
                "alex-usage",
                "alex-usage",
                "alex-sys",
                "123",
                "dev",
                false,
                "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                "assetUsage",
                "acumos:deploy",
                "alex-1",
                "swlic",
                1,
                "d817cbd1-d799-44af-8a5e-693163812e98",
                1,
                true,
                false,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                null,
                "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                "[{\"denialCode\":\"denied_due_usersOnAssignee\",\"denialType\":\"matchingConstraintOnAssignee\",\"denialReason\":\"user not in assignee lum:users: (alex-usage not lum:in [\\\"alex\\\", \\\"justin\\\", \\\"michelle\\\", \\\"unit-tester\\\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr\",\"deniedAssetUsageAgreementRevision\":49,\"deniedRightToUseId\":\"perm-1\",\"deniedRightToUseRevision\":49,\"denialReqItemName\":\"userId\",\"denialReqItemValue\":\"alex-usage\",\"deniedConstraint\":{\"origin\":\"fromRestriction\",\"dataType\":\"string\",\"operator\":\"lum:in\",\"leftOperand\":\"lum:users\",\"rightOperand\":[\"alex\",\"justin\",\"michelle\",\"unit-tester\"]}},{\"denialCode\":\"denied_due_rightToUseRevoked\",\"denialType\":\"rightToUseRevoked\",\"denialReason\":\"rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr2\",\"deniedAssetUsageAgreementRevision\":4,\"deniedRightToUseId\":\"perm-1\",\"deniedRightToUseRevision\":2,\"denialReqItemName\":\"rightToUseActive\",\"denialReqItemValue\":true},{\"denialCode\":\"denied_due_rightToUseRevoked\",\"denialType\":\"rightToUseRevoked\",\"denialReason\":\"rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)\",\"deniedAction\":\"acumos:deploy\",\"deniedAssetUsageAgreementId\":\"alex-agr2\",\"deniedAssetUsageAgreementRevision\":4,\"deniedRightToUseId\":\"perm-21\",\"deniedRightToUseRevision\":4,\"denialReqItemName\":\"rightToUseActive\",\"denialReqItemValue\":true}]"
            ],
            "result": {
                "command": "INSERT",
                "rowCount": 1,
                "rows": [
                    {
                        "assetUsageSeq": 70
                    }
                ]
            }
        },
        {
            "sqlCmd": "INSERT INTO \"includedAssetUsage\" (\"assetUsageId\", \"includedAssetUsageId\" , \"creator\",\"creatorRequestId\") SELECT ($1), UNNEST(ARRAY[($2)]) , ($3),($4) ON CONFLICT (\"assetUsageId\", \"includedAssetUsageId\") DO NOTHING",
            "sqlVals": [
                "alex-usage-1",
                "alex-usage-2",
                "alex-usage",
                "e3d56bd7-099c-46cc-a8b9-d2a30290839e"
            ],
            "result": {
                "command": "INSERT",
                "rowCount": 0,
                "rows": []
            }
        },
        {
            "sqlCmd": "UPDATE \"assetUsageReq\" AS aur SET \"requestDone\" = TRUE, \"responseSent\" = CLOCK_TIMESTAMP() , \"responseHttpCode\" = ($2),\"response\" = ($3),\"usageEntitled\" = ($4),\"status\" = ($5) WHERE aur.\"assetUsageReqId\" = ($1)",
            "sqlVals": [
                "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                402,
                {
                    "userId": "alex-usage",
                    "swMgtSystemId": "alex-sys",
                    "swMgtSystemInstanceId": "123",
                    "swMgtSystemComponent": "dev",
                    "requestId": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                    "requested": "2020-04-03T17:47:34.295Z",
                    "usageEntitled": false,
                    "assetUsage": {
                        "swTagId": "alex-1",
                        "assetUsageId": "alex-usage-1",
                        "action": "acumos:deploy",
                        "usageEntitled": false,
                        "isUsedBySwCreator": false,
                        "assetUsageSeq": 79,
                        "swidTagRevision": 1,
                        "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                        "licenseProfileRevision": 1,
                        "isRtuRequired": true,
                        "softwareLicensorId": "swlic",
                        "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                        "assetUsageDenial": [
                            {
                                "denialCode": "denied_due_usersOnAssignee",
                                "denialType": "matchingConstraintOnAssignee",
                                "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr",
                                "deniedAssetUsageAgreementRevision": 49,
                                "deniedRightToUseId": "perm-1",
                                "deniedRightToUseRevision": 49,
                                "denialReqItemName": "userId",
                                "denialReqItemValue": "alex-usage",
                                "deniedConstraint": {
                                    "origin": "fromRestriction",
                                    "dataType": "string",
                                    "operator": "lum:in",
                                    "leftOperand": "lum:users",
                                    "rightOperand": [
                                        "alex",
                                        "justin",
                                        "michelle",
                                        "unit-tester"
                                    ]
                                }
                            },
                            {
                                "denialCode": "denied_due_rightToUseRevoked",
                                "denialType": "rightToUseRevoked",
                                "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr2",
                                "deniedAssetUsageAgreementRevision": 4,
                                "deniedRightToUseId": "perm-1",
                                "deniedRightToUseRevision": 2,
                                "denialReqItemName": "rightToUseActive",
                                "denialReqItemValue": true
                            },
                            {
                                "denialCode": "denied_due_rightToUseRevoked",
                                "denialType": "rightToUseRevoked",
                                "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr2",
                                "deniedAssetUsageAgreementRevision": 4,
                                "deniedRightToUseId": "perm-21",
                                "deniedRightToUseRevision": 4,
                                "denialReqItemName": "rightToUseActive",
                                "denialReqItemValue": true
                            }
                        ],
                        "includedAssetUsage": [
                            {
                                "includedSwTagId": "alex-1",
                                "includedAssetUsageId": "alex-usage-2",
                                "usageEntitled": false,
                                "isUsedBySwCreator": false,
                                "assetUsageSeq": 70,
                                "swidTagRevision": 1,
                                "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                                "licenseProfileRevision": 1,
                                "isRtuRequired": true,
                                "softwareLicensorId": "swlic",
                                "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                                "assetUsageDenial": [
                                    {
                                        "denialCode": "denied_due_usersOnAssignee",
                                        "denialType": "matchingConstraintOnAssignee",
                                        "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                                        "deniedAction": "acumos:deploy",
                                        "deniedAssetUsageAgreementId": "alex-agr",
                                        "deniedAssetUsageAgreementRevision": 49,
                                        "deniedRightToUseId": "perm-1",
                                        "deniedRightToUseRevision": 49,
                                        "denialReqItemName": "userId",
                                        "denialReqItemValue": "alex-usage",
                                        "deniedConstraint": {
                                            "origin": "fromRestriction",
                                            "dataType": "string",
                                            "operator": "lum:in",
                                            "leftOperand": "lum:users",
                                            "rightOperand": [
                                                "alex",
                                                "justin",
                                                "michelle",
                                                "unit-tester"
                                            ]
                                        }
                                    },
                                    {
                                        "denialCode": "denied_due_rightToUseRevoked",
                                        "denialType": "rightToUseRevoked",
                                        "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                                        "deniedAction": "acumos:deploy",
                                        "deniedAssetUsageAgreementId": "alex-agr2",
                                        "deniedAssetUsageAgreementRevision": 4,
                                        "deniedRightToUseId": "perm-1",
                                        "deniedRightToUseRevision": 2,
                                        "denialReqItemName": "rightToUseActive",
                                        "denialReqItemValue": true
                                    },
                                    {
                                        "denialCode": "denied_due_rightToUseRevoked",
                                        "denialType": "rightToUseRevoked",
                                        "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                                        "deniedAction": "acumos:deploy",
                                        "deniedAssetUsageAgreementId": "alex-agr2",
                                        "deniedAssetUsageAgreementRevision": 4,
                                        "deniedRightToUseId": "perm-21",
                                        "deniedRightToUseRevision": 4,
                                        "denialReqItemName": "rightToUseActive",
                                        "denialReqItemValue": true
                                    }
                                ]
                            }
                        ]
                    }
                },
                false,
                "responseSent"
            ],
            "result": {
                "command": "UPDATE",
                "rowCount": 1,
                "rows": []
            }
        },
        {
            "sqlCmd": "COMMIT",
            "result": {
                "command": "COMMIT",
                "rowCount": 1,
                "rows": []
            }
        }
    ],
    "req": {
        "method": "PUT",
        "path": "/api/v1/asset-usage?assetUsageId=alex-usage-1",
        "content-type": "application/json; charset=utf-8",
        "send": {
            "requestId": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
            "requested": "2020-04-03T17:47:34.295Z",
            "userId": "alex-usage",
            "swMgtSystemId": "alex-sys",
            "swMgtSystemInstanceId": "123",
            "swMgtSystemComponent": "dev",
            "assetUsageReq": {
                "swTagId": "alex-1",
                "assetUsageId": "alex-usage-1",
                "action": "acumos:deploy",
                "isIncludedAsset": false,
                "includedAssetUsage": [
                    {
                        "includedSwTagId": "alex-1",
                        "includedAssetUsageId": "alex-usage-2"
                    }
                ]
            }
        }
    },
    "res": {
        "statusCode": 402,
        "body": {
            "userId": "alex-usage",
            "swMgtSystemId": "alex-sys",
            "swMgtSystemInstanceId": "123",
            "swMgtSystemComponent": "dev",
            "requestId": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
            "requested": "2020-04-03T17:47:34.295Z",
            "usageEntitled": false,
            "assetUsage": {
                "swTagId": "alex-1",
                "assetUsageId": "alex-usage-1",
                "action": "acumos:deploy",
                "usageEntitled": false,
                "isUsedBySwCreator": false,
                "assetUsageSeq": 79,
                "swidTagRevision": 1,
                "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                "licenseProfileRevision": 1,
                "isRtuRequired": true,
                "softwareLicensorId": "swlic",
                "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                "assetUsageDenial": [
                    {
                        "denialCode": "denied_due_usersOnAssignee",
                        "denialType": "matchingConstraintOnAssignee",
                        "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                        "deniedAction": "acumos:deploy",
                        "deniedAssetUsageAgreementId": "alex-agr",
                        "deniedAssetUsageAgreementRevision": 49,
                        "deniedRightToUseId": "perm-1",
                        "deniedRightToUseRevision": 49,
                        "denialReqItemName": "userId",
                        "denialReqItemValue": "alex-usage",
                        "deniedConstraint": {
                            "origin": "fromRestriction",
                            "dataType": "string",
                            "operator": "lum:in",
                            "leftOperand": "lum:users",
                            "rightOperand": [
                                "alex",
                                "justin",
                                "michelle",
                                "unit-tester"
                            ]
                        }
                    },
                    {
                        "denialCode": "denied_due_rightToUseRevoked",
                        "denialType": "rightToUseRevoked",
                        "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                        "deniedAction": "acumos:deploy",
                        "deniedAssetUsageAgreementId": "alex-agr2",
                        "deniedAssetUsageAgreementRevision": 4,
                        "deniedRightToUseId": "perm-1",
                        "deniedRightToUseRevision": 2,
                        "denialReqItemName": "rightToUseActive",
                        "denialReqItemValue": true
                    },
                    {
                        "denialCode": "denied_due_rightToUseRevoked",
                        "denialType": "rightToUseRevoked",
                        "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                        "deniedAction": "acumos:deploy",
                        "deniedAssetUsageAgreementId": "alex-agr2",
                        "deniedAssetUsageAgreementRevision": 4,
                        "deniedRightToUseId": "perm-21",
                        "deniedRightToUseRevision": 4,
                        "denialReqItemName": "rightToUseActive",
                        "denialReqItemValue": true
                    }
                ],
                "includedAssetUsage": [
                    {
                        "includedSwTagId": "alex-1",
                        "includedAssetUsageId": "alex-usage-2",
                        "usageEntitled": false,
                        "isUsedBySwCreator": false,
                        "assetUsageSeq": 70,
                        "swidTagRevision": 1,
                        "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                        "licenseProfileRevision": 1,
                        "isRtuRequired": true,
                        "softwareLicensorId": "swlic",
                        "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                        "assetUsageDenial": [
                            {
                                "denialCode": "denied_due_usersOnAssignee",
                                "denialType": "matchingConstraintOnAssignee",
                                "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr",
                                "deniedAssetUsageAgreementRevision": 49,
                                "deniedRightToUseId": "perm-1",
                                "deniedRightToUseRevision": 49,
                                "denialReqItemName": "userId",
                                "denialReqItemValue": "alex-usage",
                                "deniedConstraint": {
                                    "origin": "fromRestriction",
                                    "dataType": "string",
                                    "operator": "lum:in",
                                    "leftOperand": "lum:users",
                                    "rightOperand": [
                                        "alex",
                                        "justin",
                                        "michelle",
                                        "unit-tester"
                                    ]
                                }
                            },
                            {
                                "denialCode": "denied_due_rightToUseRevoked",
                                "denialType": "rightToUseRevoked",
                                "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr2",
                                "deniedAssetUsageAgreementRevision": 4,
                                "deniedRightToUseId": "perm-1",
                                "deniedRightToUseRevision": 2,
                                "denialReqItemName": "rightToUseActive",
                                "denialReqItemValue": true
                            },
                            {
                                "denialCode": "denied_due_rightToUseRevoked",
                                "denialType": "rightToUseRevoked",
                                "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                                "deniedAction": "acumos:deploy",
                                "deniedAssetUsageAgreementId": "alex-agr2",
                                "deniedAssetUsageAgreementRevision": 4,
                                "deniedRightToUseId": "perm-21",
                                "deniedRightToUseRevision": 4,
                                "denialReqItemName": "rightToUseActive",
                                "denialReqItemValue": true
                            }
                        ]
                    }
                ]
            }
        }
    },
    "acuLogs": [
        {
            "LogTimestamp": "__type__dateTime__",
            "RequestID": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
            "InvocationID": "PUT /api/v1/asset-usage",
            "InstanceID": "__type__uuid__",
            "Thread": "main",
            "ServiceName": "lum-server/api/v1/asset-usage",
            "Partnername": "__type__ignore__",
            "StatusCode": "INPROGRESS",
            "ResponseCode": null,
            "ResponseDescription": null,
            "Level": "DEBUG",
            "Severity": "INFO",
            "ServerFQDN": "__type__ignore__",
            "ClientIPAddress": "__type__ignore__",
            "TargetEntity": null,
            "TargetServiceName": null,
            "User": "alex-usage",
            "Logger": "__type__ignore__",
            "Mdc": null,
            "Message": {
                "requestId": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                "requested": "2020-04-03T17:47:34.295Z",
                "userId": "alex-usage",
                "swMgtSystemId": "alex-sys",
                "swMgtSystemInstanceId": "123",
                "swMgtSystemComponent": "dev",
                "assetUsageReq": {
                    "swTagId": "alex-1",
                    "assetUsageId": "alex-usage-1",
                    "action": "acumos:deploy",
                    "isIncludedAsset": false,
                    "includedAssetUsage": [
                        {
                            "includedSwTagId": "alex-1",
                            "includedAssetUsageId": "alex-usage-2"
                        }
                    ]
                }
            },
            "Marker": "ENTRY"
        },
        {
            "LogTimestamp": "__type__dateTime__",
            "RequestID": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
            "InvocationID": "response",
            "InstanceID": "__type__uuid__",
            "Thread": "main",
            "ServiceName": "lum-server/api/v1/asset-usage",
            "Partnername": "__type__ignore__",
            "StatusCode": "COMPLETE",
            "ResponseCode": 402,
            "ResponseDescription": "Denied",
            "Level": "DEBUG",
            "Severity": "INFO",
            "ServerFQDN": "__type__ignore__",
            "ClientIPAddress": "__type__ignore__",
            "TargetEntity": null,
            "TargetServiceName": null,
            "User": "alex-usage",
            "Logger": "__type__ignore__",
            "Mdc": null,
            "Message": {
                "userId": "alex-usage",
                "swMgtSystemId": "alex-sys",
                "swMgtSystemInstanceId": "123",
                "swMgtSystemComponent": "dev",
                "requestId": "e3d56bd7-099c-46cc-a8b9-d2a30290839e",
                "requested": "2020-04-03T17:47:34.295Z",
                "usageEntitled": false,
                "assetUsage": {
                    "swTagId": "alex-1",
                    "assetUsageId": "alex-usage-1",
                    "action": "acumos:deploy",
                    "usageEntitled": false,
                    "isUsedBySwCreator": false,
                    "assetUsageSeq": 79,
                    "swidTagRevision": 1,
                    "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                    "licenseProfileRevision": 1,
                    "isRtuRequired": true,
                    "softwareLicensorId": "swlic",
                    "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                    "assetUsageDenial": [
                        {
                            "denialCode": "denied_due_usersOnAssignee",
                            "denialType": "matchingConstraintOnAssignee",
                            "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr",
                            "deniedAssetUsageAgreementRevision": 49,
                            "deniedRightToUseId": "perm-1",
                            "deniedRightToUseRevision": 49,
                            "denialReqItemName": "userId",
                            "denialReqItemValue": "alex-usage",
                            "deniedConstraint": {
                                "origin": "fromRestriction",
                                "dataType": "string",
                                "operator": "lum:in",
                                "leftOperand": "lum:users",
                                "rightOperand": [
                                    "alex",
                                    "justin",
                                    "michelle",
                                    "unit-tester"
                                ]
                            }
                        },
                        {
                            "denialCode": "denied_due_rightToUseRevoked",
                            "denialType": "rightToUseRevoked",
                            "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr2",
                            "deniedAssetUsageAgreementRevision": 4,
                            "deniedRightToUseId": "perm-1",
                            "deniedRightToUseRevision": 2,
                            "denialReqItemName": "rightToUseActive",
                            "denialReqItemValue": true
                        },
                        {
                            "denialCode": "denied_due_rightToUseRevoked",
                            "denialType": "rightToUseRevoked",
                            "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                            "deniedAction": "acumos:deploy",
                            "deniedAssetUsageAgreementId": "alex-agr2",
                            "deniedAssetUsageAgreementRevision": 4,
                            "deniedRightToUseId": "perm-21",
                            "deniedRightToUseRevision": 4,
                            "denialReqItemName": "rightToUseActive",
                            "denialReqItemValue": true
                        }
                    ],
                    "includedAssetUsage": [
                        {
                            "includedSwTagId": "alex-1",
                            "includedAssetUsageId": "alex-usage-2",
                            "usageEntitled": false,
                            "isUsedBySwCreator": false,
                            "assetUsageSeq": 70,
                            "swidTagRevision": 1,
                            "licenseProfileId": "d817cbd1-d799-44af-8a5e-693163812e98",
                            "licenseProfileRevision": 1,
                            "isRtuRequired": true,
                            "softwareLicensorId": "swlic",
                            "assetUsageDenialSummary": "swid-tag(alex-1) has been found and asset-usage-agreements from swlic have been found but 3 constraints on the agreements(alex-agr, alex-agr2) deny the usage of this asset",
                            "assetUsageDenial": [
                                {
                                    "denialCode": "denied_due_usersOnAssignee",
                                    "denialType": "matchingConstraintOnAssignee",
                                    "denialReason": "user not in assignee lum:users: (alex-usage not lum:in [\"alex\", \"justin\", \"michelle\", \"unit-tester\"]) on permission(perm-1) under agreement(alex-agr) for action(acumos:deploy)",
                                    "deniedAction": "acumos:deploy",
                                    "deniedAssetUsageAgreementId": "alex-agr",
                                    "deniedAssetUsageAgreementRevision": 49,
                                    "deniedRightToUseId": "perm-1",
                                    "deniedRightToUseRevision": 49,
                                    "denialReqItemName": "userId",
                                    "denialReqItemValue": "alex-usage",
                                    "deniedConstraint": {
                                        "origin": "fromRestriction",
                                        "dataType": "string",
                                        "operator": "lum:in",
                                        "leftOperand": "lum:users",
                                        "rightOperand": [
                                            "alex",
                                            "justin",
                                            "michelle",
                                            "unit-tester"
                                        ]
                                    }
                                },
                                {
                                    "denialCode": "denied_due_rightToUseRevoked",
                                    "denialType": "rightToUseRevoked",
                                    "denialReason": "rightToUse revoked on permission(perm-1) under agreement(alex-agr2) for action(acumos:deploy)",
                                    "deniedAction": "acumos:deploy",
                                    "deniedAssetUsageAgreementId": "alex-agr2",
                                    "deniedAssetUsageAgreementRevision": 4,
                                    "deniedRightToUseId": "perm-1",
                                    "deniedRightToUseRevision": 2,
                                    "denialReqItemName": "rightToUseActive",
                                    "denialReqItemValue": true
                                },
                                {
                                    "denialCode": "denied_due_rightToUseRevoked",
                                    "denialType": "rightToUseRevoked",
                                    "denialReason": "rightToUse revoked on permission(perm-21) under agreement(alex-agr2) for action(acumos:deploy)",
                                    "deniedAction": "acumos:deploy",
                                    "deniedAssetUsageAgreementId": "alex-agr2",
                                    "deniedAssetUsageAgreementRevision": 4,
                                    "deniedRightToUseId": "perm-21",
                                    "deniedRightToUseRevision": 4,
                                    "denialReqItemName": "rightToUseActive",
                                    "denialReqItemValue": true
                                }
                            ]
                        }
                    ]
                }
            },
            "Marker": "EXIT"
        }
    ]
}